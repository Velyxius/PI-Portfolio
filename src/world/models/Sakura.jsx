/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Jagobo (https://sketchfab.com/Jagobo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cherry-blossom-trees-f69be55d2e4f4f73b568ebb185bd8496
Title: Cherry Blossom Trees
*/

import { useGLTF } from "@react-three/drei";

const Sakura = (props) => {
  const { nodes, materials } = useGLTF("/assets/models/sakura/sakuras.glb");
  return (
    <group
      {...props}
      dispose={null}
      castShadow
      receiveShadow
      onClick={(e) => e.stopPropagation()}
    >
      <group position={[88.121, 0, 0]} rotation={[Math.PI / 2, 0, -1.26]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.foliage}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.foliage}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.bark}
        position={[-0.066, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials.foliage}
        position={[-0.066, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials.bark}
        position={[88.121, 0, 0]}
        rotation={[Math.PI / 2, 0, -1.26]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_13.geometry}
        material={materials.bark}
        position={[-72.204, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_15.geometry}
        material={materials.foliage}
        position={[-72.204, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
};

useGLTF.preload("/assets/models/sakura/sakuras.glb");
export default Sakura;
